// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/companieshouse/payment-reconciliation-consumer/transformer (interfaces: Transformer)

// Package transformer is a generated GoMock package.
package transformer

import (
	data "github.com/companieshouse/payment-reconciliation-consumer/data"
	models "github.com/companieshouse/payment-reconciliation-consumer/models"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockTransformer is a mock of Transformer interface
type MockTransformer struct {
	ctrl     *gomock.Controller
	recorder *MockTransformerMockRecorder
}

// MockTransformerMockRecorder is the mock recorder for MockTransformer
type MockTransformerMockRecorder struct {
	mock *MockTransformer
}

// NewMockTransformer creates a new mock instance
func NewMockTransformer(ctrl *gomock.Controller) *MockTransformer {
	mock := &MockTransformer{ctrl: ctrl}
	mock.recorder = &MockTransformerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockTransformer) EXPECT() *MockTransformerMockRecorder {
	return m.recorder
}

// GetEshuResource mocks base method
func (m *MockTransformer) GetEshuResource(arg0 data.PaymentResponse, arg1 data.PaymentDetailsResponse) (models.EshuResourceDao, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetEshuResource", arg0, arg1)
	ret0, _ := ret[0].(models.EshuResourceDao)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetEshuResource indicates an expected call of GetEshuResource
func (mr *MockTransformerMockRecorder) GetEshuResource(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetEshuResource", reflect.TypeOf((*MockTransformer)(nil).GetEshuResource), arg0, arg1)
}

// GetTransactionResource mocks base method
func (m *MockTransformer) GetTransactionResource(arg0 data.PaymentResponse, arg1 data.PaymentDetailsResponse) (models.PaymentTransactionsResourceDao, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetTransactionResource", arg0, arg1)
	ret0, _ := ret[0].(models.PaymentTransactionsResourceDao)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetTransactionResource indicates an expected call of GetTransactionResource
func (mr *MockTransformerMockRecorder) GetTransactionResource(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTransactionResource", reflect.TypeOf((*MockTransformer)(nil).GetTransactionResource), arg0, arg1)
}
